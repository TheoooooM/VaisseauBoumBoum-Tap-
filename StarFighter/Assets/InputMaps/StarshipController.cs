//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/InputMaps/StarshipController.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @StarshipController: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @StarshipController()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""StarshipController"",
    ""maps"": [
        {
            ""name"": ""Movement"",
            ""id"": ""34997f81-1637-4bc8-a67c-5d214ba7dfef"",
            ""actions"": [
                {
                    ""name"": ""Pitch"",
                    ""type"": ""Value"",
                    ""id"": ""158f08be-0899-4a25-af30-e81b8d68559d"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Roll"",
                    ""type"": ""Value"",
                    ""id"": ""abdad1b4-e391-4045-a286-d85b716ad168"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Yaw Down"",
                    ""type"": ""Button"",
                    ""id"": ""f6a6758d-c907-424c-8ef4-3efbe9b2f64a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Yaw"",
                    ""type"": ""Value"",
                    ""id"": ""635d36b8-8ed4-4220-9778-5c80d156b0eb"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Propulse"",
                    ""type"": ""Value"",
                    ""id"": ""59f1625a-b72d-4a77-8710-80e7a40c100a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""QD"",
                    ""id"": ""7b606dda-e244-45cc-8c58-8e812b337017"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""8520b46d-1b4e-4c61-b6b4-c2ca52fdf208"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""3b5a4227-3caa-42f8-8e79-3eb239cf8ed9"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f3da9746-795f-47cd-838a-a1501cb395a3"",
                    ""path"": ""<Gamepad>/leftStick/x"",
                    ""interactions"": """",
                    ""processors"": ""Invert"",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""AE"",
                    ""id"": ""caec49f6-dd5b-42f7-91f9-b91aec3fbbe6"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""83af3fe4-8446-4219-9b86-b0c02bcf8b65"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""1bbae8ea-ca34-466a-9144-68e84df9b1fa"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Bumper"",
                    ""id"": ""db602a25-65cc-472f-a7a9-f30773e99df9"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""445bc430-93b6-4235-9f8e-fa707a5041ae"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""c52946d3-893c-4e31-86c7-dc1920e8f7df"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8d47a65a-5c89-4ae2-a839-f0c2576d7c5a"",
                    ""path"": ""<Gamepad>/rightStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""138ab3bf-449e-4f92-9366-eb1241596cc5"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Propulse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""25fa81c5-c6f9-4abd-8520-a28a041b984b"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Propulse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6553b2bc-7c3f-429a-9bc9-b7d05c4c3591"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""ZS"",
                    ""id"": ""e977edc6-023b-444a-b6de-49196f956ade"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""c27cbdf0-7620-4d9d-a3e7-46bf07954985"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""19089193-8b49-4f46-a0d3-65b1857b3124"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""ae31c0a4-6046-4616-b585-a9046b7db4e2"",
                    ""path"": ""<Gamepad>/leftStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Movement1"",
            ""id"": ""0e6777a2-839f-4e02-9a7c-bc75a9f76b89"",
            ""actions"": [
                {
                    ""name"": ""Pitch"",
                    ""type"": ""Value"",
                    ""id"": ""d8e80122-4f28-4fb1-b27e-93ea9945ca66"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Roll"",
                    ""type"": ""Value"",
                    ""id"": ""df22a43b-85dd-47b0-9695-8ec2297b6413"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Yaw"",
                    ""type"": ""Value"",
                    ""id"": ""ae73294a-45b0-40ab-945d-49c7e396de87"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Propulse"",
                    ""type"": ""Value"",
                    ""id"": ""8b36248e-e6f7-4b84-963b-388f8f2d9ba4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""QD"",
                    ""id"": ""0d24c36a-6d01-4dac-8388-e57479ee58ff"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""481f87ef-8946-4bd0-83cb-7a38c5919741"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""11757900-28e3-4cdc-965f-3cb23e3587a9"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2289e6da-fab2-4973-b5a7-0e8673d8e962"",
                    ""path"": ""<Gamepad>/rightStick/x"",
                    ""interactions"": """",
                    ""processors"": ""Invert"",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""AE"",
                    ""id"": ""9663dc28-affe-4117-a272-56b09bd47d80"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""79d80c1e-bd56-4fa8-adb7-d9d48b9a19e0"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""f4c059af-cb78-4bfb-addb-f427fd0f71a5"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""88af84e8-da1e-4353-86e2-807e59fad5ca"",
                    ""path"": ""<Gamepad>/leftStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""25c306cd-38fa-4c7e-acfa-a940da266f57"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Propulse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""9cade33e-5119-4c81-860b-d1d5fceba40f"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Propulse"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""d0662d1d-1b55-483b-bb34-ada9b835c494"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Propulse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""1b2deea3-b973-41af-a41b-aa9afcffbbda"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Propulse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""ZS"",
                    ""id"": ""9fdb9b84-3dee-4da3-893d-b9d1f8df3e89"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""cfb5611f-2d15-44c4-860d-357495c2992d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""b331dc67-de18-4481-bead-ee00bafefeaf"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0ccd044c-8a94-4093-8d96-ec648591667d"",
                    ""path"": ""<Gamepad>/leftStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Movement2"",
            ""id"": ""a779ad6f-e710-4788-a5ce-22d01e86051e"",
            ""actions"": [
                {
                    ""name"": ""Pitch"",
                    ""type"": ""Value"",
                    ""id"": ""d5bc0c5c-8cc9-40c3-854c-284d2a2d986b"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Roll"",
                    ""type"": ""Value"",
                    ""id"": ""c8320fbb-0c6f-47af-8953-27ad6b386e46"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Yaw"",
                    ""type"": ""Value"",
                    ""id"": ""391525be-7481-4b5d-83a0-fbc754cd1091"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Propulse"",
                    ""type"": ""Value"",
                    ""id"": ""beb89f22-2da0-4bee-9665-8d53bddca685"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""QD"",
                    ""id"": ""a6d49f30-0b3b-453d-b782-cc8bcf6bea2a"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""69614992-84cb-4c24-a510-6fdcd1d2aff0"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""53b4bb96-8664-45bd-829a-fc1baa524bb9"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""5e57906d-a50d-44f5-ab4a-5d5effad14cd"",
                    ""path"": ""<Gamepad>/rightStick/x"",
                    ""interactions"": """",
                    ""processors"": ""Invert"",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""AE"",
                    ""id"": ""967c5a56-c9e8-4bad-9445-e252c4545d3f"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""925f680e-7bdb-4694-80d4-e807b12ffbed"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""c1523ead-efee-41a0-b69e-9260a8caa1eb"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""efde0aa1-ccf1-4b58-8607-acee8b279062"",
                    ""path"": ""<Gamepad>/leftStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""78006433-921e-4d56-82d3-49a5bcdf9e41"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Propulse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""e526a539-c20c-488b-9758-e8b9081ac88d"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Propulse"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""d4b77c99-7d3f-4d25-8ca9-135861d9fb52"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Propulse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""385e3674-d8d2-4930-8a55-13a894211ca2"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Propulse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""ZS"",
                    ""id"": ""edc92bdd-81d6-4bd6-9d82-36e28f76049f"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""83f1bde4-f4e5-4567-b08a-f4fb032aee80"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""a2e0c19a-8913-479a-b12b-a1bbe08abc64"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""82eb92fb-95e2-4988-ba36-debc46de9ae5"",
                    ""path"": ""<Gamepad>/leftStick/y"",
                    ""interactions"": """",
                    ""processors"": ""Invert"",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Movement
        m_Movement = asset.FindActionMap("Movement", throwIfNotFound: true);
        m_Movement_Pitch = m_Movement.FindAction("Pitch", throwIfNotFound: true);
        m_Movement_Roll = m_Movement.FindAction("Roll", throwIfNotFound: true);
        m_Movement_YawDown = m_Movement.FindAction("Yaw Down", throwIfNotFound: true);
        m_Movement_Yaw = m_Movement.FindAction("Yaw", throwIfNotFound: true);
        m_Movement_Propulse = m_Movement.FindAction("Propulse", throwIfNotFound: true);
        // Movement1
        m_Movement1 = asset.FindActionMap("Movement1", throwIfNotFound: true);
        m_Movement1_Pitch = m_Movement1.FindAction("Pitch", throwIfNotFound: true);
        m_Movement1_Roll = m_Movement1.FindAction("Roll", throwIfNotFound: true);
        m_Movement1_Yaw = m_Movement1.FindAction("Yaw", throwIfNotFound: true);
        m_Movement1_Propulse = m_Movement1.FindAction("Propulse", throwIfNotFound: true);
        // Movement2
        m_Movement2 = asset.FindActionMap("Movement2", throwIfNotFound: true);
        m_Movement2_Pitch = m_Movement2.FindAction("Pitch", throwIfNotFound: true);
        m_Movement2_Roll = m_Movement2.FindAction("Roll", throwIfNotFound: true);
        m_Movement2_Yaw = m_Movement2.FindAction("Yaw", throwIfNotFound: true);
        m_Movement2_Propulse = m_Movement2.FindAction("Propulse", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Movement
    private readonly InputActionMap m_Movement;
    private List<IMovementActions> m_MovementActionsCallbackInterfaces = new List<IMovementActions>();
    private readonly InputAction m_Movement_Pitch;
    private readonly InputAction m_Movement_Roll;
    private readonly InputAction m_Movement_YawDown;
    private readonly InputAction m_Movement_Yaw;
    private readonly InputAction m_Movement_Propulse;
    public struct MovementActions
    {
        private @StarshipController m_Wrapper;
        public MovementActions(@StarshipController wrapper) { m_Wrapper = wrapper; }
        public InputAction @Pitch => m_Wrapper.m_Movement_Pitch;
        public InputAction @Roll => m_Wrapper.m_Movement_Roll;
        public InputAction @YawDown => m_Wrapper.m_Movement_YawDown;
        public InputAction @Yaw => m_Wrapper.m_Movement_Yaw;
        public InputAction @Propulse => m_Wrapper.m_Movement_Propulse;
        public InputActionMap Get() { return m_Wrapper.m_Movement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MovementActions set) { return set.Get(); }
        public void AddCallbacks(IMovementActions instance)
        {
            if (instance == null || m_Wrapper.m_MovementActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MovementActionsCallbackInterfaces.Add(instance);
            @Pitch.started += instance.OnPitch;
            @Pitch.performed += instance.OnPitch;
            @Pitch.canceled += instance.OnPitch;
            @Roll.started += instance.OnRoll;
            @Roll.performed += instance.OnRoll;
            @Roll.canceled += instance.OnRoll;
            @YawDown.started += instance.OnYawDown;
            @YawDown.performed += instance.OnYawDown;
            @YawDown.canceled += instance.OnYawDown;
            @Yaw.started += instance.OnYaw;
            @Yaw.performed += instance.OnYaw;
            @Yaw.canceled += instance.OnYaw;
            @Propulse.started += instance.OnPropulse;
            @Propulse.performed += instance.OnPropulse;
            @Propulse.canceled += instance.OnPropulse;
        }

        private void UnregisterCallbacks(IMovementActions instance)
        {
            @Pitch.started -= instance.OnPitch;
            @Pitch.performed -= instance.OnPitch;
            @Pitch.canceled -= instance.OnPitch;
            @Roll.started -= instance.OnRoll;
            @Roll.performed -= instance.OnRoll;
            @Roll.canceled -= instance.OnRoll;
            @YawDown.started -= instance.OnYawDown;
            @YawDown.performed -= instance.OnYawDown;
            @YawDown.canceled -= instance.OnYawDown;
            @Yaw.started -= instance.OnYaw;
            @Yaw.performed -= instance.OnYaw;
            @Yaw.canceled -= instance.OnYaw;
            @Propulse.started -= instance.OnPropulse;
            @Propulse.performed -= instance.OnPropulse;
            @Propulse.canceled -= instance.OnPropulse;
        }

        public void RemoveCallbacks(IMovementActions instance)
        {
            if (m_Wrapper.m_MovementActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMovementActions instance)
        {
            foreach (var item in m_Wrapper.m_MovementActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MovementActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MovementActions @Movement => new MovementActions(this);

    // Movement1
    private readonly InputActionMap m_Movement1;
    private List<IMovement1Actions> m_Movement1ActionsCallbackInterfaces = new List<IMovement1Actions>();
    private readonly InputAction m_Movement1_Pitch;
    private readonly InputAction m_Movement1_Roll;
    private readonly InputAction m_Movement1_Yaw;
    private readonly InputAction m_Movement1_Propulse;
    public struct Movement1Actions
    {
        private @StarshipController m_Wrapper;
        public Movement1Actions(@StarshipController wrapper) { m_Wrapper = wrapper; }
        public InputAction @Pitch => m_Wrapper.m_Movement1_Pitch;
        public InputAction @Roll => m_Wrapper.m_Movement1_Roll;
        public InputAction @Yaw => m_Wrapper.m_Movement1_Yaw;
        public InputAction @Propulse => m_Wrapper.m_Movement1_Propulse;
        public InputActionMap Get() { return m_Wrapper.m_Movement1; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Movement1Actions set) { return set.Get(); }
        public void AddCallbacks(IMovement1Actions instance)
        {
            if (instance == null || m_Wrapper.m_Movement1ActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_Movement1ActionsCallbackInterfaces.Add(instance);
            @Pitch.started += instance.OnPitch;
            @Pitch.performed += instance.OnPitch;
            @Pitch.canceled += instance.OnPitch;
            @Roll.started += instance.OnRoll;
            @Roll.performed += instance.OnRoll;
            @Roll.canceled += instance.OnRoll;
            @Yaw.started += instance.OnYaw;
            @Yaw.performed += instance.OnYaw;
            @Yaw.canceled += instance.OnYaw;
            @Propulse.started += instance.OnPropulse;
            @Propulse.performed += instance.OnPropulse;
            @Propulse.canceled += instance.OnPropulse;
        }

        private void UnregisterCallbacks(IMovement1Actions instance)
        {
            @Pitch.started -= instance.OnPitch;
            @Pitch.performed -= instance.OnPitch;
            @Pitch.canceled -= instance.OnPitch;
            @Roll.started -= instance.OnRoll;
            @Roll.performed -= instance.OnRoll;
            @Roll.canceled -= instance.OnRoll;
            @Yaw.started -= instance.OnYaw;
            @Yaw.performed -= instance.OnYaw;
            @Yaw.canceled -= instance.OnYaw;
            @Propulse.started -= instance.OnPropulse;
            @Propulse.performed -= instance.OnPropulse;
            @Propulse.canceled -= instance.OnPropulse;
        }

        public void RemoveCallbacks(IMovement1Actions instance)
        {
            if (m_Wrapper.m_Movement1ActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMovement1Actions instance)
        {
            foreach (var item in m_Wrapper.m_Movement1ActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_Movement1ActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public Movement1Actions @Movement1 => new Movement1Actions(this);

    // Movement2
    private readonly InputActionMap m_Movement2;
    private List<IMovement2Actions> m_Movement2ActionsCallbackInterfaces = new List<IMovement2Actions>();
    private readonly InputAction m_Movement2_Pitch;
    private readonly InputAction m_Movement2_Roll;
    private readonly InputAction m_Movement2_Yaw;
    private readonly InputAction m_Movement2_Propulse;
    public struct Movement2Actions
    {
        private @StarshipController m_Wrapper;
        public Movement2Actions(@StarshipController wrapper) { m_Wrapper = wrapper; }
        public InputAction @Pitch => m_Wrapper.m_Movement2_Pitch;
        public InputAction @Roll => m_Wrapper.m_Movement2_Roll;
        public InputAction @Yaw => m_Wrapper.m_Movement2_Yaw;
        public InputAction @Propulse => m_Wrapper.m_Movement2_Propulse;
        public InputActionMap Get() { return m_Wrapper.m_Movement2; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Movement2Actions set) { return set.Get(); }
        public void AddCallbacks(IMovement2Actions instance)
        {
            if (instance == null || m_Wrapper.m_Movement2ActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_Movement2ActionsCallbackInterfaces.Add(instance);
            @Pitch.started += instance.OnPitch;
            @Pitch.performed += instance.OnPitch;
            @Pitch.canceled += instance.OnPitch;
            @Roll.started += instance.OnRoll;
            @Roll.performed += instance.OnRoll;
            @Roll.canceled += instance.OnRoll;
            @Yaw.started += instance.OnYaw;
            @Yaw.performed += instance.OnYaw;
            @Yaw.canceled += instance.OnYaw;
            @Propulse.started += instance.OnPropulse;
            @Propulse.performed += instance.OnPropulse;
            @Propulse.canceled += instance.OnPropulse;
        }

        private void UnregisterCallbacks(IMovement2Actions instance)
        {
            @Pitch.started -= instance.OnPitch;
            @Pitch.performed -= instance.OnPitch;
            @Pitch.canceled -= instance.OnPitch;
            @Roll.started -= instance.OnRoll;
            @Roll.performed -= instance.OnRoll;
            @Roll.canceled -= instance.OnRoll;
            @Yaw.started -= instance.OnYaw;
            @Yaw.performed -= instance.OnYaw;
            @Yaw.canceled -= instance.OnYaw;
            @Propulse.started -= instance.OnPropulse;
            @Propulse.performed -= instance.OnPropulse;
            @Propulse.canceled -= instance.OnPropulse;
        }

        public void RemoveCallbacks(IMovement2Actions instance)
        {
            if (m_Wrapper.m_Movement2ActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMovement2Actions instance)
        {
            foreach (var item in m_Wrapper.m_Movement2ActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_Movement2ActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public Movement2Actions @Movement2 => new Movement2Actions(this);
    public interface IMovementActions
    {
        void OnPitch(InputAction.CallbackContext context);
        void OnRoll(InputAction.CallbackContext context);
        void OnYawDown(InputAction.CallbackContext context);
        void OnYaw(InputAction.CallbackContext context);
        void OnPropulse(InputAction.CallbackContext context);
    }
    public interface IMovement1Actions
    {
        void OnPitch(InputAction.CallbackContext context);
        void OnRoll(InputAction.CallbackContext context);
        void OnYaw(InputAction.CallbackContext context);
        void OnPropulse(InputAction.CallbackContext context);
    }
    public interface IMovement2Actions
    {
        void OnPitch(InputAction.CallbackContext context);
        void OnRoll(InputAction.CallbackContext context);
        void OnYaw(InputAction.CallbackContext context);
        void OnPropulse(InputAction.CallbackContext context);
    }
}
